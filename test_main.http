@baseUrl = http://localhost:8000/api/v1

### Slow Queries API Tests

# Get slow queries (default parameters)
GET {{baseUrl}}/slow_queries/
Accept: application/json

###

# Get slow queries with custom parameters
GET {{baseUrl}}/slow_queries/?days=7&instance=test-instance&min_time=5&limit=50&skip=10
Accept: application/json

###

### Instance Setup API Tests

# List all slow MySQL instances
GET {{baseUrl}}/instance_setup/list_slow_instances/
Accept: application/json

###

# Add a new slow MySQL instance
POST {{baseUrl}}/instance_setup/add_slow_instance/
Content-Type: application/json

{
    "environment": "PROD",
    "db_type": "MySQL",
    "cluster_name": "main-cluster",
    "instance_name": "prod-db-1",
    "host": "prod-db-1.example.com",
    "port": 3306,
    "region": "us-west-2",
    "user": "monitor_user",
    "password": "strongpassword123",
    "db": "information_schema"
}

###

# Delete a slow MySQL instance
DELETE {{baseUrl}}/instance_setup/delete_slow_instance/?instance_name=prod-db-1
Accept: application/json

### 기본 쿼리 (파라미터 없음)
GET {{baseUrl}}/query_tool/slow_queries
Accept: application/json

### 단일 인스턴스 쿼리
GET {{baseUrl}}/slow_queries?instance=rastalion.me
Accept: application/json

### 다중 인스턴스 쿼리
GET {{baseUrl}}/slow_queries?instance=instance1&instance=instance2
Accept: application/json

### 날짜 필터 적용
GET {{baseUrl}}/query_tool/slow_queries?days=7
Accept: application/json

### 슬로우 쿼리 목록 조회
GET {{baseUrl}}/slow_queries?days=7&instance=prd-uplusorder-instance-1&limit=10
Accept: application/json

### 특정 PID에 대한 EXPLAIN 실행
POST {{baseUrl}}/query_tool/explain?pid=8733
Accept: application/json

### EXPLAIN 결과 마크다운으로 다운로드
GET {{baseUrl}}/query_tool/download?pid=8020
Accept: text/markdown

### 저장된 EXPLAIN 계획 목록 조회
GET {{baseUrl}}/plans/
Accept: application/json

### 여러 인스턴스에 대한 슬로우 쿼리 목록 조회
GET {{baseUrl}}/slow_queries?days=3&instance=prd-uplusorder-instance-1&instance=prd-uplusorder-instance-2&limit=20
Accept: application/json

### 전체 슬로우 쿼리 목록 조회 (기본값 사용)
GET {{baseUrl}}/slow_queries
Accept: application/json


### MySQL Command Status API
# All commands
GET {{baseUrl}}/command_status
    ?instance_name=dev-torder-orderservice-instance-1

### Specific commands
GET {{baseUrl}}/command_status
    ?instance_name=orderservice

### MySQL Disk Usage API
GET {{baseUrl}}/disk_usage
    ?instance_name=orderservice

&metric=Binlog_cache_use&metric=Binlog_cache_disk_use

###
GET https://mgmt.py.devops.torder.tech/api/v1/disk_usage
    ?instance_name=orderservice&metric=Binlog_cache_use&metric=Binlog_cache_disk_use

### 특정 메트릭과 기간을 함께 지정하여 조회
GET https://mgmt.py.devops.torder.tech/api/v1/disk_usage?instance_name=your_instance_name&metric=Binlog_cache_use&metric=Created_tmp_tables&days=3
Accept: application/json


### Multiple metrics
GET {{baseUrl}}/disk_usage
    ?instance_name=orderservice&metric=Binlog_cache_use&metric=Binlog_cache_disk_use

### Slow Query Stats API
GET {{baseUrl}}/slow_query_stats

### MySQL Disk Usage API
GET {{baseUrl}}/disk_usage
    ?instance_name=dev-torder-orderservice-instance-1
    &metric=Created_tmp_tables
    &metric=Created_tmp_disk_tables


### instance_statistics.py 테스트

# 일일 인스턴스 통계 가져오기
GET http://localhost:8000/api/v1/reports/daily-instance-statistics
Accept: application/json

###

# 월간 인스턴스 통계 가져오기
GET http://localhost:8000/api/v1/reports/monthly-instance-statistics?year=2024&month=09
Accept: application/json

### prometheus_daily_metrics.py 테스트

# 일일 메트릭 수집하기 (날짜 지정)
GET http://localhost:8000/api/v1/collect-daily-metrics?date=2024-10-14
Accept: application/json

###

# 일일 메트릭 수집하기 (날짜 미지정, 어제 날짜로 수집)
GET http://localhost:8000/api/v1/collect-daily-metrics
Accept: application/json

### report_generator.py 테스트

# 통합 리포트 생성하기 (날짜 범위 지정)
GET http://localhost:8000/api/v1/reports/generate-integrated-report?start_date=2024-10-01&end_date=2024-10-13
Accept: application/json

###

# 통합 리포트 생성하기 (날짜 범위 미지정, 최근 7일간의 리포트 생성)
GET http://localhost:8000/api/v1/reports/generate-integrated-report
Accept: application/json